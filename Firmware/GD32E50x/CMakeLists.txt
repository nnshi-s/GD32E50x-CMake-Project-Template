# Firmware name
set(target firm-gd32e50x)

# Source files relative path
set(source-relative-path GD32E50x_standard_peripheral/Source)

# Startup file relative path
# Choose cl, hd, or xd base on flash size. See RCU section in user manual
# References:
#   startup_stm32l552xx.s generated from stm32cubemx
#   /Firmware/CMSIS_5/Device/ARM/ARMCM33/Source/GCC/startup_ARMCM33.S
#   /Firmware/CMSIS_5/Device/ARM/ARMCM33/Source/startup_ARMCM33.c
#   /Firmware/GD32E50x/Source/ARM/startup_gd32e50x_cl.s
set(startup-file-relative-path CMSIS/GD/GD32E50x/Source/GCC/startup_gd32e50x_cl.s)

# system_xxx.c relative path
set(system-c-relative-path CMSIS/GD/GD32E50x/Source/system_gd32e50x.c)

# Linker Script Absolute Path
# References:
#   project generated by stm32cubemx
#   /Firmware/CMSIS_5/Device/ARM/ARMCM33/Source/GCC/gcc_arm.ld
#   https://www.acrc.bris.ac.uk/acrc/RedHat/rhel-ld-en-4/scripts.html
set(linker-script-absolute-path ${CMAKE_SOURCE_DIR}/Firmware/LinkerScripts/GD32E507ZETX_FLASH.ld)

# Include directories relative path
set(include-dir-relative-paths
        CMSIS/GD/GD32E50x/Include
        ../CMSIS_5/CMSIS/Core/Include
        GD32E50x_standard_peripheral/Include
        # Template
        )

# macro definition for choosing chips, see Firmware/CMSIS/GD/GD32E50x/Include/gd32e50x.h
set(compile-definitions
        GD32E50X_CL
        GD32E50X
        )

# mcu arch
set(mcu-tune cortex-m33)
set(mcu-arch armv8-m.main+dsp+fp)



set(firmware-library-name ${target} PARENT_SCOPE)

file(GLOB source
        ${source-relative-path}/*.c
        ${source-relative-path}/*.h
        )
list(APPEND source
        ${system-c-relative-path}
        ${startup-file-relative-path}
        )


add_library(${target} STATIC ${source})

target_include_directories(${target} SYSTEM PRIVATE Template)
target_include_directories(${target} SYSTEM PUBLIC ${include-dir-relative-paths})
target_compile_definitions(${target} PUBLIC ${compile-definitions})
target_compile_options(${target} PUBLIC
        -mtune=${mcu-tune}
        -march=${mcu-arch}
        -mthumb
        -mfpu=auto
        -mfloat-abi=hard

        -fdata-sections
        -ffunction-sections

        -Wall
        -Wextra

        # -save-temps

        # $<$<COMPILE_LANGUAGE:CXX>:-fno-rtti>
        # $<$<COMPILE_LANGUAGE:CXX>:-fno-exceptions>
        # $<$<CONFIG:Debug>:-g>
        # $<$<CONFIG:Debug>:-Og>
        )
# Reference: https://gcc.gnu.org/onlinedocs/gcc/ARM-Options.html
target_link_options(${target} PUBLIC
        -T${linker-script-absolute-path}
        -mtune=${mcu-tune}
        -march=${mcu-arch}
        -mthumb
        -mfpu=auto
        -mfloat-abi=hard

        -specs=nano.specs
        -specs=nosys.specs

        -lc
        -lm
        -lnosys
        -Wl,-Map=${PROJECT_NAME}.map,--cref
        -Wl,--gc-sections
        -Wl,--print-memory-usage
        )